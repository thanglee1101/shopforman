{"ast":null,"code":"import axios from 'axios';\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO, ADD_TO_CART_SUCCESS, ADD_TO_CART_FAIL, MY_CARTS_SUCCESS, MY_CARTS_REQUEST // MY_CARTS_FAIL,\n, REMOVE_ITEM_CART_SUCCESS } from '../constants/cartConstants'; // import { REGISTER_USER_FAIL, REGISTER_USER_SUCCESS } from '../constants/userConstants'\n\nexport const myCarts = () => async dispatch => {\n  dispatch({\n    type: MY_CARTS_REQUEST\n  });\n  const {\n    data\n  } = await axios.get(`/api/v1/cart`);\n  dispatch({\n    type: MY_CARTS_SUCCESS,\n    payload: data\n  });\n};\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_TO_CART\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log(1);\n    const {\n      data\n    } = await axios.post(`/api/v1/cart/${id}`, quantity, config);\n    console.log(data);\n    dispatch({\n      type: ADD_TO_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_TO_CART_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //     dispatch({\n//         type: ADD_TO_CART,\n//         payload: {\n//             product: data.product._id,\n//             name: data.product.name,\n//             price: data.product.price,\n//             image: data.product.images[0].url,\n//             stock: data.product.stock,\n//             quantity\n//         }\n//     })\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n// }\n\nexport const removeItemFromCart = id => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_ITEM_CART\n  });\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const {\n    data\n  } = await axios.delete(`/api/v1/cart/${id}`, config);\n  dispatch({\n    type: REMOVE_ITEM_CART_SUCCESS,\n    payload: data\n  });\n};\nexport const saveShippingInfo = data => async dispatch => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data\n  });\n};","map":{"version":3,"sources":["C:/Users/anhta/OneDrive/Máy tính/Nhom3_IVS_ThucTapChuyenNganh/frontend/src/actions/cartActions.js"],"names":["axios","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","ADD_TO_CART_SUCCESS","ADD_TO_CART_FAIL","MY_CARTS_SUCCESS","MY_CARTS_REQUEST","REMOVE_ITEM_CART_SUCCESS","myCarts","dispatch","type","data","get","payload","addItemToCart","id","quantity","getState","config","headers","console","log","post","error","response","message","removeItemFromCart","delete","saveShippingInfo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,WADJ,EAEIC,gBAFJ,EAGIC,kBAHJ,EAIIC,mBAJJ,EAKIC,gBALJ,EAMIC,gBANJ,EAOIC,gBAPJ,CAQI;AARJ,EASIC,wBATJ,QAWO,4BAXP,C,CAYA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAC5CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAW,MAAMZ,KAAK,CAACa,GAAN,CAAW,cAAX,CAAvB;AACAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEL,gBADD;AAELQ,IAAAA,OAAO,EAAEF;AAFJ,GAAD,CAAR;AAIH,CAPM;AASP,OAAO,MAAMG,aAAa,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB,OAAMP,QAAN,EAAgBQ,QAAhB,KAA6B;AAEpE,MAAI;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACA,UAAMkB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACuB,IAAN,CAAY,gBAAeP,EAAG,EAA9B,EAAiCC,QAAjC,EAA2CE,MAA3C,CAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,mBADD;AAELU,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAdD,CAcE,OAAOY,KAAP,EAAc;AACZd,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,gBADD;AAELS,MAAAA,OAAO,EAAEU,KAAK,CAACC,QAAN,CAAeb,IAAf,CAAoBc;AAFxB,KAAD,CAAR;AAIH;AACJ,CAtBE,C,CAuBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAIX,EAAD,IAAQ,OAAMN,QAAN,EAAgBQ,QAAhB,KAA6B;AACnER,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAET;AADD,GAAD,CAAR;AAGA,QAAMiB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAKA,QAAM;AAAER,IAAAA;AAAF,MAAW,MAAMZ,KAAK,CAAC4B,MAAN,CAAc,gBAAeZ,EAAG,EAAhC,EAAmCG,MAAnC,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEH,wBADD;AAELM,IAAAA,OAAO,EAAEF;AAFJ,GAAD,CAAR;AAIH,CAdM;AAgBP,OAAO,MAAMiB,gBAAgB,GAAIjB,IAAD,IAAU,MAAMF,QAAN,IAAmB;AAEzDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAER,kBADD;AAELW,IAAAA,OAAO,EAAEF;AAFJ,GAAD,CAAR;AAOH,CATM","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    ADD_TO_CART,\r\n    REMOVE_ITEM_CART,\r\n    SAVE_SHIPPING_INFO,\r\n    ADD_TO_CART_SUCCESS,\r\n    ADD_TO_CART_FAIL,\r\n    MY_CARTS_SUCCESS,\r\n    MY_CARTS_REQUEST,\r\n    // MY_CARTS_FAIL,\r\n    REMOVE_ITEM_CART_SUCCESS,\r\n\r\n} from '../constants/cartConstants'\r\n// import { REGISTER_USER_FAIL, REGISTER_USER_SUCCESS } from '../constants/userConstants'\r\n\r\nexport const myCarts = () => async(dispatch) => {\r\n    dispatch({ type: MY_CARTS_REQUEST })\r\n    const { data } = await axios.get(`/api/v1/cart`)\r\n    dispatch({\r\n        type: MY_CARTS_SUCCESS,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const addItemToCart = (id, quantity) => async(dispatch, getState) => {\r\n\r\n        try {\r\n            dispatch({ type: ADD_TO_CART })\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            console.log(1)\r\n            const { data } = await axios.post(`/api/v1/cart/${id}`, quantity, config)\r\n            console.log(data)\r\n            dispatch({\r\n                type: ADD_TO_CART_SUCCESS,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ADD_TO_CART_FAIL,\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    }\r\n    //     dispatch({\r\n    //         type: ADD_TO_CART,\r\n    //         payload: {\r\n    //             product: data.product._id,\r\n    //             name: data.product.name,\r\n    //             price: data.product.price,\r\n    //             image: data.product.images[0].url,\r\n    //             stock: data.product.stock,\r\n    //             quantity\r\n    //         }\r\n    //     })\r\n\r\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n// }\r\n\r\nexport const removeItemFromCart = (id) => async(dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_ITEM_CART\r\n    })\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const { data } = await axios.delete(`/api/v1/cart/${id}`, config)\r\n    dispatch({\r\n        type: REMOVE_ITEM_CART_SUCCESS,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const saveShippingInfo = (data) => async(dispatch) => {\r\n\r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    })\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}